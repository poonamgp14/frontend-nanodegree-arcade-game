       for (row = 0; row < numRows; row++) {
            if (row === 4){
                console.log("yes,row is 4");
                ctx.fillRect(0, (row+1)*63, 800,100);
                continue;
            }
            else{
                console.log("yes,row is" + row)
                for (col = 0; col < numCols; col++) {
                    var rowx = col * 80;
                    var rowy = row * 63;
                    console.log("row" + row + " col-number " + col + " x is "+ rowx + " y is "+rowy)

                    ctx.drawImage(Resources.get(rowImages[row]), rowx,rowy);
            }
        }
    }



    for (row = 0; row < numRows; row++) {
            if (row === 4){
                console.log("yes,row is 4");
                ctx.fillRect(0, (row+1)*63, 800,100);
                continue;
            }
            else if(row === 5){
                console.log("yes,row is 5");
                for (col = 0; col < numCols; col++) {
                    var rowx = col * 80;
                    var rowy = 100;
                    //console.log("row" + row + " col-number " + col + " x is "+ rowx + " y is "+rowy)

                    ctx.drawImage(Resources.get(rowImages[row]), rowx,rowy);
                    continue;
            }
        }

            else{
                console.log("yes,row is" + row)
                for (col = 0; col < numCols; col++) {
                    var rowx = col * 80;
                    var rowy = row * 63;
                    //console.log("row" + row + " col-number " + col + " x is "+ rowx + " y is "+rowy)

                    ctx.drawImage(Resources.get(rowImages[row]), rowx,rowy);
            }
        }
    }

/*Player.prototype.checkForCollision = function() {
    for (var i = 0; i < allEnemies.length; i++) {

        var collisionX = Math.abs(player.startX - allEnemies[i].x);
        var collisionY = Math.abs(player.startY - allEnemies[i].y);

        if(collisionX < 40 && collisionY < 40) {
            //ctx.clearRect(0, 0, canvas.width, canvas.height);
            this.score-- ;
            this.lives-- ;
            this.rePosition();
        }
    }
};
*/

 <canvas id = "canvas-heart"> </canvas>

 #canvas-heart{
    z-index: 1;
    /*background-color: red;*/
    margin-top: -500px

}

//with ctxheart
var heart = new Heart(15,63);
var heart1 = new Heart(15+95*2,63);
var heart2 = new Heart(15+95*4,63);
var heart3 = new Heart(15+95*6,63);
var heart4 = new Heart(15+95*8,63);
var heart5 = new Heart(15,63*5);
var heart6 = new Heart(15+95*2,63*5);
var heart7 = new Heart(15+95*4,63*5);
var heart8 = new Heart(15+95*6,63*5);
var heart9 = new Heart(15+95*8,63*5);